{"remainingRequest":"/Users/aletheia/Desktop/byrdbot2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/aletheia/Desktop/byrdbot2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/byrdbot2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/byrdbot2/src/components/SoundsOfImpact.vue?vue&type=template&id=6fde6911&scoped=true&","dependencies":[{"path":"/Users/aletheia/Desktop/byrdbot2/src/components/SoundsOfImpact.vue","mtime":1676906960000},{"path":"/Users/aletheia/Desktop/byrdbot2/node_modules/cache-loader/dist/cjs.js","mtime":1676906544000},{"path":"/Users/aletheia/Desktop/byrdbot2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1676906561000},{"path":"/Users/aletheia/Desktop/byrdbot2/node_modules/cache-loader/dist/cjs.js","mtime":1676906544000},{"path":"/Users/aletheia/Desktop/byrdbot2/node_modules/vue-loader/lib/index.js","mtime":1676906561000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}